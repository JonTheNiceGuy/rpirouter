---
- name: Copy setPiPassword.service file
  become: true
  copy:
    src: setPiPassword.service
    dest: "{{ item.key }}/lib/systemd/system/setPiPassword.service"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ root_volume | dict2items }}"
  loop_control:
    label: "{{ item.value }}"

- name: Configure setPiPassword to start on boot
  become: true
  file:
    src: "/lib/systemd/system/setPiPassword.service"
    dest: "{{ item.key }}/etc/systemd/system/multi-user.target.wants/setPiPassword.service"
    force: yes
    follow: false
    state: link
  loop: "{{ root_volume | dict2items }}"
  loop_control:
    label: "{{ item.value }}"

- name: Check whether to reset the password
  become: true
  stat:
    path: "{{ item.key }}/etc/.pi_password_reset"
  changed_when: false
  failed_when: false
  register: pi_password_reset
  loop: "{{ root_volume | dict2items }}"
  loop_control:
    label: "{{ item.value }}"

- name: Define password to reset
  become: true
  copy:
    content: "pi:{{ _password }}"
    dest: "{{ item.item.key }}/root/piPassword"
    owner: "0"
    group: "0"
    mode: "0600"
  loop: "{{ pi_password_reset.results }}"
  loop_control:
    label: "{{ item.item.value }}"
  when:
    - _password | length > 0
    - item.stat.exists == false

- name: Set prevent bit on password
  become: true
  copy:
    content: ""
    dest: "{{ item.item.key }}/etc/.pi_password_reset"
    owner: "0"
    group: "0"
    mode: "0600"
  loop: "{{ pi_password_reset.results }}"
  loop_control:
    label: "{{ item.item.value }}"
  when: 
    - _password | length > 0
    - item.stat.exists == false
